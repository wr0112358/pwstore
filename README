Password Storage With OpenSSL Backed Cryptography

Work in progress. But in use and working.

Missing/Bugs
  o general:
    rethink data structure and uid.
    interactive add is missing.
    some command to dump pws to stdout in cleartext necessary?

  o x11 clipboard algorithm
    Windows equivalent?
    Provide option to copy first username, then after selection request the
    password.
    What todo in a ssh session?

  o cli:
    Disabling ECHO in termios settings has no effect.
    select instead of busy wait.

    Alternate mode does not clear the screen correctly using ssh in cygwin
    terminal.

  o point&click gui:
    python/tk + boost python?
    needs some refactoring:
      reencryption for every operation is not feasible. Move all methods
      add/lookup/.. to a class that saves the current state(=crypto file
      and db).
    display all entries per dflt
    filter entries with partial string search on user input
    select entry with double click -> copy pw in copypaste-buffer

  o windows:
    crypto backend needs RNG. see comment.
    interactive lookup not working yet. port terminal_util.hh
    build/install instructions

# first real usage revealed:

all of the modyfying commands should be interruptible!(lookup and x11 thingy too!)

auto resize terminal, so that it works at least for me under awesome wm

timeout for interactive mode, after which pw must be reentered?

new mode for lookup, that is enabled by cmdline flag or by a command_option in interactive mode:
  copy first username and if successfull copy password!

backup files are nice, but kinda too many of them keep floating around..
  commandline flag to delete some/all.
  show changes made since a specific backup file. (history functionality)
#

Usage
  Add some data:
  ./pwstore add
  Or add some provided test data:
  ./pwstore init

  Look at db contents/get uids:
  ./pwstore dump
  ./pwstore lookup <optional-string>
  Or do an interactive lookup:
  ./pwstore -i lookup

  Extract a password:
  ./pwstore lookup -n <uid>
  Or in interactive mode:
  <Enter> <uid> <Enter>

  Remove a key:
  ./pwstore remove -n 1
  or multiple keys:
  ./pwstore remove -n 1 -n 2

  Interactive mode displays the supported keyboard shortcuts per default.


Get it
  Recursive clone, to get the deps too.
  git clone --recursive <this-repo>
  make pwstore


Installation
  su --command="make install"

  After installation it is recommended to add a short-cut key for
  interactive lookup. Examples to use C-2 as shortcut under:
  For awsome wm add to .config/awesome/rc.lua:
    awful.key({ ctrlkey, }, "2", function () awful.util.spawn("urxvt256c -e /opt/usr/bin/pwstore -f DB_FILE lookup -i") end),
    And restart with: META-C-r
  For openbox-lxde add to ~/.config/openbox/lxde-rc.xml:
    <keybind key="C-1">
      <action name="Execute">
          <command>/opt/usr/bin/open_shell_in_cwd_of</command>
      </action>
    </keybind>
    And restart with: $ openbox-lxde --reconfigure
