Password Storage With OpenSSL Backed Cryptography

Work in progress.

Store existing or generated passwords together with url and username
in an encrypted database.
Access to database is provided by a command line tools and through a
qt gui. Fast lookup of keys/values with partial string matching.


Usage

  make all

  Gui:
  qpwstore/qpwstore

  Command line interface:
  Add some data:
  ./pwstore add
  Or add some provided test data:
  ./pwstore init

  Look at db contents/get uids:
  ./pwstore dump
  ./pwstore lookup <optional-string>
  Or do an interactive lookup:
  ./pwstore -i lookup

  Extract a password:
  ./pwstore get -n <uid>
  Or in interactive mode:
  <Enter> <uid> <Enter>

  Extract a password and dump to stdout instead of x11 selection
  buffer/qt clipboard:
  ./pwstore -o get -n <uid>

  Remove a key:
  ./pwstore remove -n 1
  or multiple keys:
  ./pwstore remove -n 1 -n 2

  Interactive mode displays the supported keyboard shortcuts per default.


Get it
  Recursive clone, to get the deps too.
  git clone --recursive <this-repo>
  make pwstore
  make qpwstore


Installation
  su --command="make install"

  After installation it is recommended to add a short-cut key for
  interactive lookup. Examples to use C-2 as shortcut under:
  For awsome wm add to .config/awesome/rc.lua:

    awful.key({ ctrlkey, }, "2",
              function()
	      awful.util.spawn(
	      "urxvt256c -e /opt/usr/bin/pwstore -f DB_FILE lookup -i"
	      ) end),

    And restart with: META-C-r
