Password Storage With OpenSSL Backed Cryptography

Work in progress.

Missing/Bugs
  o general:
    rethink data structure and uid.

  o x11 clipboard algorithm
    Windows equivalent?
    Provide option to copy first username, then after selection request the
    password.
    What todo in a ssh session?

  o cli:
    Emacs style key bindings are not the best choice for usability..(except
    for emacs users).
    -> per default in filter mode
    -> enter command mode with: <ENTER>
       in command mode use same bindings as now, but without CTRL-modifier

    Disabling ECHO in termios settings has no effect.
    select instead of busy wait.

    Alternate mode does not clear the screen correctly using ssh in cygwin
    terminal.

  o gui:
    python/tk + boost python?
    -> needs some refactoring

  o windows:
    crypto backend needs RNG. see comment.
    interactive lookup not working yet. port terminal_util.hh

  o micha wants a point&click gui
    display all entries per dflt
    filter entries with partial string search on user input
    select entry with double click -> copy pw in copypaste-buffer

Usage
  Add some data:
  ./pwstore add
  Or add some provided test data:
  ./pwstore init

  Look at db contents/get uids:
  ./pwstore dump
  ./pwstore lookup <optional-string>
  Or do an interactive lookup:
  ./pwstore -i lookup

  Extract a password:
  ./pwstore lookup -n <uid>
  Or in interactive mode:
  C-x n <uid>

  Remove a key:
  ./pwstore remove -n 1
  or multiple keys:
  ./pwstore remove -n 1 -n 2

  Interactive mode displays the supported keyboard shortcuts per default.


Get it
  Recursive clone, to get the deps too.
  git clone --recursive <this-repo>
  make pwstore
